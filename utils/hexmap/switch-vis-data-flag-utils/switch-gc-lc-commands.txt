# rename a whole bunch of files
ls|gawk '{O=$1;gsub(/20210215-flat-pref/,"20210216-gc-off-flat-pref",$0);N=$1;system("mv "O" "N);}'

# switch green contrast (or low chromaticity) flags in a load of config files
##for F in `ls tmp/*`; do gawk -f switch-gc-off.awk $F > `basename $F`; done

TH=0.10; for F in `ls tmp/*`; do gawk -vTH=$TH -f switch-gc-off.awk $F > `basename $F`; done

TH=0.15; for F in `ls tmp/*`; do gawk -vTH=$TH -f ../switch-gc-on.awk $F > `basename $F`; done

# reverse sign of x coordinates in the vis-data section of a bunch of JSON config files
for F in `ls orig/*`; do gawk -f ../flip-x-coord.awk $F > `basename $F`; done

# NB after reversing sign of x coordinates, also need to run the following to 
# recalculate the dominant wavelength info in the vis-data section

for S in {1..30}; do gawk -f recalc-doms-in-json.awk giurfa-pref-incorrect-doms/aus-data-flipped-20210224-gc-off-giurfa-pref-sample-$S.cfg.json > giurfa-pref/aus-data-flipped-20210301-gc-off-giurfa-pref-sample-$S.cfg.json; done

# NB will probably also need to reverse the entries in the vis-data section as they
# are expected to appear in ascending order of dom wavelength.
# This can be done with something like:
head -973 $F > $O; head -1054 $F|tail -81|tac >> $O; tail -4 $F >> $O
# (then tidy up trailing commas in first and last entries afterwards)

for F in `ls pre-reverse/flat-pref/*json`; do O="flat-pref/"`basename $F`; head -973 $F > $O; head -1054 $F|tail -81|tac >> $O; tail -4 $F >> $O; done

