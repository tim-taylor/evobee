# Gnuplot script to generate a histogram plot of flower data with flowers laid
# out in hex sector space in bins of 10 degrees, for all flower types present in a 
# simulation run at the specified generation number, using input data from the
# specified file.
#
# The input file is a 4-field CSV file as generated by the utility script
# gen-hex-sector-bin-means-stds
#
# Call like this, e.g.
# > gnuplot -c plot-hex-sector-bins.gnuplot filebase gennum titletext x0pos[L|Q|M] xshift[10|5] prefplot[none|bee|hoverfly|flat] W
# e.g.
# > gnuplot -c plot-hex-sector-bins.gnuplot hex-sector-bin-means-stds 0
#
# The script looks for an input data file named [filebase]-gen-N.csv
#
# The output is saved in a file named [filebase]-gen-N-hex-sector.png

beePrefFile="~/evobee-hexmap/giurfa-pref-by-theta.csv"
hoverflyPrefFile="~/evobee-hexmap/hoverfly-pref-by-theta.csv"
flatPrefFile="~/evobee-hexmap/flat-pref-by-theta.csv"

filebase="hex-sector-bin-means-stds"
gen="0"
titletext=""
zeropos="L"
xshift=5.0
prefs="none"
prefFile=beePrefFile
binwidth=10

if (exists("ARG1")) {
    filebase=ARG1
}

if (exists("ARG2")) {
    gen=ARG2
}

if (exists("ARG3")) {
    titletext=ARG3." / "
}

if (exists("ARG4") && ARG4 ne "") {
    zeropos=ARG4
}

if (exists("ARG5") && ARG5 ne "") {
    xshift = real(ARG5)
}

if (exists("ARG6")) {
    prefs=ARG6
    if (prefs eq "hoverfly") {
        prefFile=hoverflyPrefFile
    } else {
        if (prefs eq "flat") {
            prefFile=flatPrefFile
        }    
    }
}

if (exists("ARG7") && ARG7 ne "") {
    binwidth = real(ARG7)
}

fbaseIN = sprintf("%s-gen-%s", filebase, gen)
infile = sprintf("%s.csv", fbaseIN)
if (zeropos eq "M") {
    fbaseOUT = sprintf("%s-0m-gen-%04d", filebase, (gen+0))
} else {
    if (zeropos eq "Q") {
        fbaseOUT = sprintf("%s-0q-gen-%04d", filebase, (gen+0))
    } else {
        fbaseOUT = sprintf("%s-0l-gen-%04d", filebase, (gen+0))
    }
}
outfile = sprintf("%s.png", fbaseOUT)

set datafile separator ","
set size square
set title font ",13"
set title titletext."Generation ".(gen+1)
set xlabel font ",12"
set xlabel "Hexagon sector"
set ylabel font ",12"
set ylabel "Plant count"
set xtics nomirror out 20
set xtics font ",11"
set ytics nomirror out
set y2tics
set y2label font ",12"
set y2label "Pollinator Innate Preference (normalised units)"
set boxwidth binwidth absolute
set style fill solid 1.0 border lc "gray30"
unset key
if (zeropos eq "M") {
    set xrange[-175:185]
} else {
    if (zeropos eq "Q") {
        set xrange[-85:275]
    } else {
        set xrange[0:365]
    }
}
set yrange[0:35000]
set y2range [0:0.015]

set term png size 800,800
set output outfile

if (zeropos eq "M") {
    plot infile using (($1*10)+xshift)-(int($1/18)*360):3:4 with boxerrorbars fillcolor "gray70"
} else {
    if (zeropos eq "Q") {
        if (prefs eq "none") {
            plot infile using (($1*10)+xshift)-(int($1/27)*360):3:4 with boxerrorbars fillcolor "gray70"
        } else {
            #plot infile using (($1*binwidth)+xshift)-(int($1/4.5)*360):3:4 with boxerrorbars fillcolor "gray80", prefFile using ($1-int($1/270)*360):6 axes x1y2 w lp lt 6
            
            set style line 1 lt 1 lc rgb "light-turquoise"
            set style line 2 lt 1 lc rgb "light-blue"
            set style line 3 lt 1 lc rgb "midnight-blue"
            set style line 4 lt 1 lc rgb "black"
            set style line 5 lt 1 lc rgb "dark-olivegreen"
            set style line 6 lt 1 lc rgb "green"
            set style fill solid
            
            plot infile using (($1*binwidth)+xshift)-(int($1/4.5)*360):3:4:1 with boxerrorbars fillcolor "gray80" lc variable, prefFile using ($1-int($1/270)*360):6 axes x1y2 w lp lt 6            
            
            #plot infile u (($1*binwidth)+xshift)-(int($1/4.5)*360):3:4:(0.5):($2>0?1:2):xtic(1) w boxes lc variable
            #                  #xval:ydata:errorbars:boxwidth:color_index:xtic_labels
        }
    } else {
        plot infile using (($1*10)+int(xshift)):3:4 with boxerrorbars fillcolor "gray70"
    }
}
